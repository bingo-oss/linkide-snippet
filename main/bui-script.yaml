 - name: BT_APP
   ver: '1.0'
   scope: BT_APP
   lang: javascript
   groups:
   - name: Common
     desc: 通用
     snippets:

     - name: buiweex-require
       displayName: 引用
       code:
        var buiweex = require("bui-weex");

   - name: Notice
     desc: 通知提醒
     snippets:

     - name: bui-toast
       displayName: toast
       code:
        buiweex.toast("${1:普通文本}");

     - name: bui-alert
       displayName: alert
       code:
        buiweex.alert("${1:普通文本}",function (value) { ${2} });
       desc:

     - name: bui-confirm
       displayName: confirm
       code:
        buiweex.confirm("${1:确定要删除吗?}",function (value) { ${2} });
       desc:

     - name: weex-modal-toast
       displayName: modal-toast
       code: |
        var modal = weex.requireModule('modal');
        modal.toast({ message: '${1:普通文本}', duration: 0.3 });
       desc:

     - name: weex-modal-alert
       displayName: modal-alert
       code: |
        var modal = weex.requireModule('modal');
        modal.alert({ message: '${1:普通文本}', duration: 0.3 }, function (value) { ${2} });
       desc:

     - name: weex-modal-confirm
       displayName: modal-confirm
       code: |
        var modal = weex.requireModule('modal');
        modal.confirm({ message: '${1:普通文本}', duration: 0.3 }, function (value) { ${2} });
       desc:

     - name: weex-modal-prompt
       displayName: modal-prompt
       code: |
        var modal = weex.requireModule('modal');
        modal.prompt({ message: '${1:普通文本}', duration: 0.3 }, function (value) { ${2} });
       desc:

   - name: Storage
     desc: 存储
     snippets:

     - name: weex-storage-setItem
       displayName: storage-setItem
       code: |
        const storage = weex.requireModule('storage');
        storage.setItem('${1:key}', '${2:value}', event => { ${3} });
       desc: 将内容设置进系统剪切板

     - name: weex-storage-getItem
       displayName: storage-getItem
       code: |
        const storage = weex.requireModule('storage');
        storage.getItem('${1:key}', event => { ${2}  console.log('get value:', event.data); });
       desc:

     - name: weex-storage-removeItem
       displayName: storage-removeItem
       code: |
        const storage = weex.requireModule('storage');
        storage.removeItem('${1:key}', event => { ${2}  console.log('get value:', event.data); });
       desc:

     - name: weex-storage-getAllKeys
       displayName: storage-getAllKeys
       code: |
        const storage = weex.requireModule('storage');
        storage.getAllKeys(event => { ${1}  console.log('all keys:', event.data); });
       desc:

   - name: Network
     desc: 网络
     snippets:

     - name: weex-stream-fetch-get
       displayName: stream-fetch-get
       code: |
        var stream = weex.requireModule('stream');
        stream.fetch({
            method:${1:GET},
            url:${2:''},
            headers:${3:{}},
            type:${4:'json'}
        },res=>{
            //callback: status,ok,statusText,data,headers
            ${5}
        });
       desc:

     - name: weex-stream-fetch-post
       displayName: stream-fetch-post
       code: |
        var stream = weex.requireModule('stream');
        stream.fetch({
            method:${1:POST},
            url:${2:''},
            headers:${3:{}},
            type:${4:'json'},
            body:${5:''} //HTTP请求体 string类型
        },res=>{
            //callback: status,ok,statusText,data,headers
            ${6}
        });
       desc:

   - name: Event
     desc: 事件
     snippets:

     - name: weex-globalEvent-add
       displayName: globalEvent-add
       code: |
        var globalEvent = weex.requireModule('globalEvent');
        globalEvent.addEventListener("${1:geolocation}", function (e) {
            console.log("get geolocation")
        });
       desc:

     - name: weex-globalEvent-remove
       displayName: globalEvent-remove
       code: |
        var globalEvent = weex.requireModule('globalEvent');
        globalEvent.removeEventListener("${1:geolocation}");
       desc:


   - name: System
     desc: 系统
     snippets:

     - name: weex-clipboard-getString
       displayName: clipboard-getString
       code: |
        const clipboard = weex.requireModule('clipboard');
        clipboard.getString(ret => { ${1:this.message} = 'text from clipboard:' + ret.data });
       desc:

     - name: weex-clipboard-setString
       displayName: clipboard-setString
       code: |
        const clipboard = weex.requireModule('clipboard');
        clipboard.setString(${1:'普通文本'});
       desc:


   - name: Other
     desc: 其他
     snippets:

     - name: bui-path
       displayName: 获取上下文路径
       code:
        var path = buiweex.getContextPath();
       desc:

     - name: bui-push
       displayName: push
       code:
        buiweex.push(${1:url},${2:{}});
       desc:

     - name: bui-pop
       displayName: pop
       code:
        buiweex.pop();
       desc:

     - name: weex-animation
       displayName: animation
       code: |
        const animation = weex.requireModule('animation');
        var elRef = this.\$refs.myRef;
        animation.transition(${1:elRef},
        {
            styles: {
                color: '#FF0000',
                transform: 'translate(250px, 100px)',
                transformOrigin: 'center center'
            },
            duration: 800, //ms
            timingFunction: 'ease',
            needLayout:false,
            delay: 0 //ms
        },
        function () { ${2} });
       desc:

     - name: weex-picker
       displayName: picker
       code: |
        const picker = weex.requireModule('picker');
        	picker.pickTime({ value: ${1:this.value}},
        		event => {
                    if (event.result === 'success') {
                        ${2:this.value} = event.data;
                    }
                }
            );
       desc:

     - name: module.exports
       displayName: module.exports
       code: |
        var buiweex = require("bui-weex");
        module.exports = {
            props:{},
            data: function () {
                return {

                }
            },
            methods: {

            },
            components:{

            },
            mounted: function () {

            }
        }
       desc: